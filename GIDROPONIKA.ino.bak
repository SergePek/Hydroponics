#include "U8glib.h"
#include "rus6x12.h"
#include "button.h"
#include "real_time.h"
#include "timer.h"

U8GLIB_ST7920_128X64_1X u8g(10); 
//U8GLIB_ST7920_128X64_1X u8g(13, 11, 10);
u8g_uint_t w, d;

#define KEY_NONE 0
#define KEY_PREV 1
#define KEY_NEXT 2
#define KEY_SELECT 3
#define KEY_BACK 4

uint8_t uiKeyPrev = 51;
uint8_t uiKeyNext = 49;
uint8_t uiKeySelect = 53;
uint8_t uiKeyBack = 47;

Button prevBtn(uiKeyPrev);
Button nextBtn(uiKeyNext);
Button selectBtn(uiKeySelect);
Button backBtn(uiKeyBack);

uint8_t uiKeyCodeFirst = KEY_NONE;
uint8_t uiKeyCodeSecond = KEY_NONE;
uint8_t uiKeyCode = KEY_NONE;

RealTime realTime;

Timer timer900(900);

uint8_t h =12;

struct MenuItem {
  char *title;
  struct MenuItem  *Next;
  struct MenuItem  *Previous;
  struct MenuItem  *Parent;
  struct MenuItem  *Child;
  void (*Handler)();
  bool edit;
};

MenuItem main_screen,a,b,c,dd,e,
          a_1, a_2, a_3;

MenuItem *pMenuItemCurrent;

MenuItem * handler;
uint8_t menu_current = 0;
uint8_t menu_redraw_required = 0;
uint8_t display_redraw_required = 1;
uint8_t last_key_code = KEY_NONE;

String firstTime;
String lastTime;


////////////////////////////////////////////////////
void setDateAndTime(){
  
    menu_redraw_required = 0;  
    
    static uint8_t _year;
    static uint8_t _month;
    static uint8_t _day;
    static uint8_t _hour;
    static uint8_t _minute;

    _year = realTime.getYear();
    _month= realTime.getMonth();
    _day = realTime.getDay();
    _hour = realTime.getHour();
    _minute = realTime.getMinute();

   
  
  static uint8_t n;
 
  if(nextBtn.click()) {
    Serial.println("НАЖАЛИ прев");
    switch(n){
      case 0:
         realTime.setTime(_minute, --_hour);
         break;
      case 1:
         realTime.setTime(--_minute, _hour);
         break;
      case 2:
         realTime.setDate(--_day, _month, _year);
         break;
      case 3:
         realTime.setDate(_day, --_month, _year);
         break;
      case 4:
         realTime.setDate(_day, _month, --_year);
         break;
    }
    display_redraw_required = 1;  
  }
  if(prevBtn.click()) {
    Serial.println("НАЖАЛИ некст");
     switch(n){
      case 0:
         realTime.setTime(_minute, ++_hour);
         break;
      case 1:
         realTime.setTime(++_minute, _hour);
         break;
      case 2:
         realTime.setDate(++_day, _month, _year);
         break;
      case 3:
         realTime.setDate(_day, ++_month, _year);
         break;
      case 4:
         realTime.setDate(_day, _month, ++_year);
         break;
    }
    
    display_redraw_required = 1;  
  }
  if(selectBtn.click()) {
    Serial.println("НАЖАЛИ селект");
    n++;
    if(n>4) n=0;
    display_redraw_required = 1;  
  }
  u8g.firstPage(); 
  if (  display_redraw_required != 0 ) {
    u8g.firstPage();
    do {
      u8g.setFont(rus6x12);
      u8g.setFontPosTop(); 
      u8g.setDefaultForegroundColor();

      
      u8g.drawStr(10, 2, "УСТАНОВКА ВРЕМЕНИ");
      u8g.setPrintPos(15, 12);
      
      if(n==0){

        
        u8g.drawBox(13, 12, 15, 12);
        u8g.setDefaultBackgroundColor();
        if(_hour>=10) {
          u8g.print(_hour);
        }
        else {
          u8g.print("0");
          u8g.print(_hour);
        }
        u8g.setDefaultForegroundColor();
      } else {
        if(_hour>=10) {
          u8g.print(_hour);
        }
        else {
          u8g.print("0");
          u8g.print(_hour);
        }
      }
      u8g.setPrintPos(25, 12);
      u8g.print(" часов");
      u8g.print(":");

      u8g.setPrintPos(70, 12);
      
       if(n==1){

         u8g.drawBox(68, 12, 15, 12);
         u8g.setDefaultBackgroundColor();
         if(_minute >= 10){
            u8g.print(_minute);
         } else {
            u8g.print("0");
            u8g.print(_minute);
         }
       
         u8g.setDefaultForegroundColor();
      } else {
         if(_minute >= 10){
            u8g.print(_minute);
         } else {
            u8g.print("0");
            u8g.print(_minute);
         }
      }
     
      u8g.print(" минут");
      
      u8g.drawStr(20, 30, "УСТАНОВКА ДАТЫ");
      u8g.setPrintPos(20, 40);
      
      if(n==2){
         u8g.drawBox(18, 40, 15, 12);
         u8g.setDefaultBackgroundColor();
       
         if(_day >= 10){
            u8g.print(_day);
         } else {
            u8g.print("0");
            u8g.print(_day);
         } 
        
         u8g.setDefaultForegroundColor();
      } else {
         if(_day >= 10){
            u8g.print(_day);
         } else {
            u8g.print("0");
            u8g.print(_day);
         }  
      } 
      u8g.setPrintPos(33, 40); 
      u8g.print(".");
      
      if(n==3){
         u8g.drawBox(37, 40, 15, 12);
         u8g.setDefaultBackgroundColor();
       
         if(_month>10){
          u8g.print(_month);
        }
        else {
          u8g.print("0");
          u8g.print(_month);
        }
        
         u8g.setDefaultForegroundColor();
      } else {
        if(_month>10){
          u8g.print(_month);
        }
        else {
          u8g.print("0");
          u8g.print(_month);
        }
      } 
      
      u8g.setPrintPos(53, 40); 
       u8g.print(".");
       if(n==4){
         u8g.drawBox(57, 40, 30, 12);
         u8g.setDefaultBackgroundColor();
         
         u8g.print("20");
         u8g.print(_year);
       
         u8g.setDefaultForegroundColor();
      } else {
         u8g.print("20");
         u8g.print(_year);
      } 
      
       u8g.print(" год");
     
     
      u8g.drawStr(0, 55, "МЕНЮ");
      
    } while( u8g.nextPage() );
    display_redraw_required = 0;  
     
  }

}

void editURL() {
   menu_redraw_required = 0;
  Serial.println("Вызван обработчиккккккк!");
 
  u8g.firstPage();
  static uint8_t i;
  if(prevBtn.click()) {
    i++;
    display_redraw_required = 1;
  }
  //u8g_uint_t w, d;
  if (  display_redraw_required != 0 ) {
    u8g.firstPage();
    do {
      u8g.setFont(rus6x12);
      u8g.setFontPosTop(); 
      w = u8g.getWidth();
     
      u8g.setDefaultForegroundColor();
      u8g.drawStr(5, 2, "РЕДАКТИРОВАНИЕ URL");
      u8g.drawStr(5, 22, "НАЖИМАЙТЕ КНОПКИ ");
      u8g.setPrintPos(5, 40); 
      u8g.print(i);
      //Serial.print("Рисуем дисплей");
    } while( u8g.nextPage() );
    display_redraw_required = 0;
  }
}

void editData () {
  Serial.println("Вызван обработчик EDITDATA!");
}

void main_screen_draw() {
  
  menu_redraw_required = 0;
  
  lastTime = firstTime;
  firstTime = realTime.getTime();
  
  u8g.firstPage(); 
  
  if (  display_redraw_required != 0 ) {
    u8g.firstPage();
    do {
      u8g.setFont(rus6x12);
      u8g.setFontPosTop(); 
      w = u8g.getWidth();
      u8g.setDefaultForegroundColor();
      u8g.drawStr(5, 2, "ГЛАВНОЕ ОКНО");
      u8g.drawStr(5, 22, realTime.getTime());
      u8g.drawStr(0, 55, "МЕНЮ");
      
      //Serial.println("Рисуем дисплей");
    } while( u8g.nextPage() );
    display_redraw_required = 0;
  }

  if(lastTime!=firstTime){
      Serial.println("ПЕРЕРИСОВКА ГЛАВНОГО ЭКРАНА");
      display_redraw_required = 1;
    }

  if(prevBtn.click()) {
    
    display_redraw_required = 1;
  }
}

//void uiSetup(void) {
//  pinMode(uiKeyPrev, INPUT_PULLUP);
//  pinMode(uiKeyNext, INPUT_PULLUP); 
//  pinMode(uiKeySelect, INPUT_PULLUP);
//  pinMode(uiKeyBack, INPUT_PULLUP);
//}

void uiStep(void) {
  uiKeyCodeSecond = uiKeyCodeFirst;
  if ( digitalRead(uiKeyPrev) == LOW )
    uiKeyCodeFirst = KEY_PREV;
  else if ( digitalRead(uiKeyNext) == LOW )
    uiKeyCodeFirst = KEY_NEXT;
  else if ( digitalRead(uiKeySelect) == LOW )
    uiKeyCodeFirst = KEY_SELECT;
  else if ( digitalRead(uiKeyBack) == LOW )
    uiKeyCodeFirst = KEY_BACK;
  else 
    uiKeyCodeFirst = KEY_NONE;
  
  if ( uiKeyCodeSecond == uiKeyCodeFirst )
    uiKeyCode = uiKeyCodeFirst;
  else
    uiKeyCode = KEY_NONE;
}

void drawMenu() {
  uint8_t i=0;
  //u8g_uint_t w, d;
  MenuItem *pMenuItem;
  u8g.setFont(rus6x12);
  u8g.setFontPosTop(); 
 
  w = u8g.getWidth();
  pMenuItem = pMenuItemCurrent;
  
  while(pMenuItem->Previous != NULL){
    pMenuItem = pMenuItem->Previous;
  }
  
  while(1){ 
    d = (w-u8g.getStrWidth(pMenuItem->title))/2;
    u8g.setDefaultForegroundColor();
    if ( pMenuItem->title == pMenuItemCurrent->title ) {
      u8g.drawBox(0, i*h, w, h);
      u8g.setDefaultBackgroundColor();
    }
    u8g.drawStr(d, i*h+2, pMenuItem->title);
 
    pMenuItem = pMenuItem->Next;
    i++;
    if(!pMenuItem){
      break;
      i=0;
    }
 }
}

 void updateMenu(void) {
   if ( uiKeyCode != KEY_NONE && last_key_code == uiKeyCode ) {
    return;
  }
  last_key_code = uiKeyCode;
  
  switch ( uiKeyCode ) {
    
    case KEY_NEXT:  if(pMenuItemCurrent->edit) break;
      
      if(pMenuItemCurrent->Next != NULL) {
        pMenuItemCurrent = pMenuItemCurrent->Next;
      }
      menu_redraw_required = 1;
      break;
      
    case KEY_PREV:  if(pMenuItemCurrent->edit) break;
    
      if(pMenuItemCurrent->Previous != NULL) {
        pMenuItemCurrent = pMenuItemCurrent->Previous;
      }
      menu_redraw_required = 1;
      break;
      
    case KEY_SELECT:  if(pMenuItemCurrent->edit) break;
    
      if(pMenuItemCurrent->Child != NULL){
        pMenuItemCurrent = pMenuItemCurrent->Child;
        menu_redraw_required = 1;
      } 
      else if(pMenuItemCurrent->Handler != NULL){
          pMenuItemCurrent->edit = true;
          display_redraw_required = 1;     
      }
      
      break;

    case KEY_BACK:
    
      if(pMenuItemCurrent->edit){
            pMenuItemCurrent->edit = false;
        } 
             
      if(pMenuItemCurrent->Parent != NULL) {
          pMenuItemCurrent = pMenuItemCurrent->Parent;
      }
      menu_redraw_required = 1;
      break;
  }
}

void setup() {
 Serial.begin(9600);  
 realTime.beginn();
 
                    //title;   Next;   Previous;   Parent;   Child;  Handler, edit;
 
 main_screen = {"ГЛАВНОЕ ОКНО", &a, NULL, NULL, NULL, main_screen_draw, true};
 
 a = {"НАСТРОЙКИ", &b, &main_screen, NULL, &a_1,  NULL, false  };
 
      a_1 = {"ДАТА И ВРЕМЯ",    &a_2,   NULL,   &a,  NULL,    setDateAndTime,     false  };
      a_2 = {"ТАЙМЕРЫ",   &a_3,   &a_1,   &a,  NULL,    NULL,     false  };
      a_3 = {"URL",     NULL,   &a_2,   &a,  NULL,    editURL,  false  };
          
 b = {"НЕ РЕАЛИЗОВАНО_1",        &c,     &a, NULL, NULL,  NULL, false  };
 c = {"НЕ РЕАЛИЗОВАНО_2",        &dd,     &b, NULL, NULL,  NULL, false  };
 dd = {"БУДИЛЬНИК",        NULL,   &c, NULL, NULL,  NULL, false  };

 pMenuItemCurrent = &main_screen;
 
  u8g_uint_t w, d;
  u8g.firstPage();
  do  {
     u8g.setFont(rus6x12);
    u8g.setFontPosTop(); 
    w = u8g.getWidth();
    d = (w-u8g.getStrWidth("ЗАГРУЗКА"))/2;
    u8g.setDefaultForegroundColor();
    u8g.drawStr(d, 2, "ЗАГРУЗКА");
    
  } while( u8g.nextPage() );
 delay(1000);
}

    
void loop() {
  Serial.println("LOOP");
  uiStep();    
   
  if (  menu_redraw_required != 0 ) {    
    u8g.firstPage();
    do  {
      drawMenu();
    } while( u8g.nextPage() );
    menu_redraw_required = 0;
  }
  updateMenu();   
  
  if(pMenuItemCurrent->edit) {
        Serial.println("Вызываем обработчик");
        pMenuItemCurrent->Handler ();
        
  }
}
